var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, ElementRef } from '@angular/core';
export var HoveredContent = (function () {
    function HoveredContent(elRef) {
        this.elRef = elRef;
    }
    Object.defineProperty(HoveredContent.prototype, "options", {
        get: function () {
            return this._options;
        },
        set: function (op) {
            this._options = op;
        },
        enumerable: true,
        configurable: true
    });
    HoveredContent.prototype.ngAfterContentChecked = function () {
        var toolTipWidth = this.elRef.nativeElement.querySelector('div.ng-tool-tip-content').offsetWidth;
        if (window.innerWidth < (toolTipWidth + this.options.x)) {
            this.options.x = this.options.x - toolTipWidth;
        }
        if (this.options.offset && this.options.offset.x) {
            this.options.x += this.options.offset.x;
        }
        if (this.options.offset && this.options.offset.y) {
            this.options.y += this.options.offset.y;
        }
    };
    HoveredContent = __decorate([
        Component({
            template: "\n            <div class=\"ng-tool-tip-content\"\n                    [ngClass]=\"options.cls\"\n                    [innerHTML] = \"options.content\"\n                    [style.top.px]=\"options.y\"\n                    [style.left.px]=\"options.x\"\n                    style=\"z-index : 10;border: 1px solid #000;background-color: #FFF;position: absolute;\">\n              </div>\n              "
        }), 
        __metadata('design:paramtypes', [ElementRef])
    ], HoveredContent);
    return HoveredContent;
}());
//# sourceMappingURL=C:/GEMMAA/GEMMAA_CLI/src/node_modules/angular2-tooltip/src/content/content.js.map